/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

package GUI;

import java.io.FileNotFoundException;

import javax.xml.bind.JAXBException;

import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smackx.pubsub.PayloadItem;
import org.jivesoftware.smackx.pubsub.SimplePayload;

import stickerService.*;
import PubSub.*;

@SuppressWarnings("serial")
public class GUI extends javax.swing.JFrame {
	
	Publisher publisher = new Publisher();
	Subscriber subscriber = new Subscriber();
    
    /** Creates new form Antenna */
    public GUI() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        publishField = new javax.swing.JTextField();
        publishButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ChangeUserIDField = new javax.swing.JTextField();
        ChangeUserIDButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        SubscribeField = new javax.swing.JTextField();
        SubscribeButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        UnsubscribeField = new javax.swing.JTextField();
        UnsubscribeButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        ListenField = new javax.swing.JTextField();
        ListenButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        publishTopicBox = new javax.swing.JComboBox();
        publishTypeBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        createField = new javax.swing.JTextField();
        CreateButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        deleteField = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        getTopicIDButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        discoverButton = new javax.swing.JButton();
        ausgabeScrollPane = new javax.swing.JScrollPane();
        ausgabeTextArea = new javax.swing.JTextArea();
        getTopicIDField = new javax.swing.JTextField();
        discoverField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Antenna");

        publishField.setText("Text");
        publishField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publishFieldActionPerformed(evt);
            }
        });

        publishButton.setText("Publish");
        publishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
									try {
										publishButtonActionPerformed(evt);
									} catch (FileNotFoundException e) {
										//  
										e.printStackTrace();
									} catch (JAXBException e) {
										//  
										e.printStackTrace();
									}
								} catch (XMPPException e) {
									//  
									e.printStackTrace();
								}
            }
        });

        jLabel1.setText("Publish");

        jLabel2.setText("Change User ID");

        ChangeUserIDField.setText("User ID");

        ChangeUserIDButton.setText("Change");
        ChangeUserIDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeUserIDButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Subscribe To Node");

        SubscribeField.setText("NodeURI");
        SubscribeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubscribeFieldActionPerformed(evt);
            }
        });

        SubscribeButton.setText("Subscribe");
        SubscribeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
									SubscribeButtonActionPerformed(evt);
								} catch (XMPPException e) {
									//  
									e.printStackTrace();
								}
            }
        });

        jLabel4.setText("Unsubscribe To Node");

        UnsubscribeField.setText("NodeURI");
        UnsubscribeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnsubscribeFieldActionPerformed(evt);
            }
        });

        UnsubscribeButton.setText("Unsubscribe");
        UnsubscribeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
									UnsubscribeButtonActionPerformed(evt);
								} catch (XMPPException e) {
									//  
									e.printStackTrace();
								}
            }
        });

        jLabel5.setText("Listen To Node");

        ListenField.setText("NodeURI");
        ListenField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListenFieldActionPerformed(evt);
            }
        });

        ListenButton.setText("Listen");
        ListenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
									ListenButtonActionPerformed(evt);
								} catch (XMPPException e) {
									//  
									e.printStackTrace();
								}
            }
        });

        jLabel9.setText("Choose Topic");

        publishTopicBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Users", "Stickers", "Collections", "Offers", "Photos" }));

        publishTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Comment", "Title", "Like" }));

        jLabel10.setText("Choose Type");

        jLabel11.setText("Create node");

        createField.setText("NodeURI");
        createField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFieldActionPerformed(evt);
            }
        });

        CreateButton.setText("Create node");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
									CreateButtonActionPerformed(evt);
								} catch (XMPPException e) {
									//  
									e.printStackTrace();
								}
            }
        });

        jLabel12.setText("Delete node");

        deleteField.setText("NodeURI");
        deleteField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFieldActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete node");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
									deleteButtonActionPerformed(evt);
								} catch (XMPPException e) {
									//  
									e.printStackTrace();
								}
            }
        });

        getTopicIDButton.setText("Get TopicID");
        getTopicIDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
									getTopicIDButtonActionPerformed(evt);
								} catch (XMPPException e) {
									//  
									e.printStackTrace();
								}
            }
        });

        jLabel13.setText("Get TopicID");

        jLabel14.setText("Discover node");

        discoverButton.setText("Discover node");
        discoverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
									discoverButtonActionPerformed(evt);
								} catch (XMPPException e) {
									//  
									e.printStackTrace();
								}
            }
        });

        ausgabeTextArea.setColumns(20);
        ausgabeTextArea.setRows(5);
        ausgabeScrollPane.setViewportView(ausgabeTextArea);

        getTopicIDField.setText("NodeID");

        discoverField.setText("NodeID");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, publishButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, publishField)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                    .add(jLabel9)
                                    .add(18, 18, 18)
                                    .add(publishTopicBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1))
                            .add(layout.createSequentialGroup()
                                .add(jLabel10)
                                .add(18, 18, 18)
                                .add(publishTypeBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(78, 78, 78)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(discoverField)
                            .add(ChangeUserIDField)
                            .add(createField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .add(deleteField)
                            .add(getTopicIDField))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, deleteButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(CreateButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, getTopicIDButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(ChangeUserIDButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(31, 31, 31))
                            .add(layout.createSequentialGroup()
                                .add(discoverButton)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(SubscribeButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, SubscribeField))
                            .add(jLabel3))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(UnsubscribeField)
                                .add(UnsubscribeButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(ListenButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 197, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(ListenField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 197, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(ausgabeScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 631, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(ausgabeScrollPane)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(publishTopicBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel9))
                                .add(10, 10, 10)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(publishTypeBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel10))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(publishField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(publishButton))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel11)
                                    .add(createField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(CreateButton))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(deleteField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(deleteButton)
                                    .add(jLabel12))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(ChangeUserIDField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(ChangeUserIDButton)
                                    .add(jLabel2))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(getTopicIDButton)
                                    .add(getTopicIDField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel13))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(discoverField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(discoverButton)
                                    .add(jLabel14))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 132, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel5)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(SubscribeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(SubscribeButton))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(UnsubscribeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(UnsubscribeButton))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(ListenField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(ListenButton)))
                        .add(113, 113, 113))))
        );

        pack();
    }// </editor-fold>

    
    private void publishFieldActionPerformed(java.awt.event.ActionEvent evt) {                                             
         
    }                                            

    private void publishButtonActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException, FileNotFoundException, JAXBException {     	
    	String topicID = (String) publishTopicBox.getSelectedItem();
    	String type = (String) publishTopicBox.getSelectedItem();
    	String payloadString = publishField.getText();
    	PayloadItem<SimplePayload> payload = new PayloadItem<SimplePayload> (null,(new SimplePayload(topicID, null, payloadString)));
    	publisher.publish(topicID, type, payload);
    }                                             

    private void SubscribeFieldActionPerformed(java.awt.event.ActionEvent evt) {                                               
         
    }                                              

    private void SubscribeButtonActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException { 
    	String topicID = SubscribeField.getText();
      subscriber.subscribe(topicID);
    }                                               

    private void ChangeUserIDButtonActionPerformed(java.awt.event.ActionEvent evt) { 
        Helper.changeUserID(Integer.parseInt(ChangeUserIDField.getText()));
    }                                                  

    private void UnsubscribeFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                 
         
    }                                                

    private void UnsubscribeButtonActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException {  
    	String topicID = UnsubscribeField.getText();
      subscriber.unsubscribe(topicID);
    }                                                 

    private void ListenFieldActionPerformed(java.awt.event.ActionEvent evt) {                                            
         
    }                                           

    private void ListenButtonActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException { 
    	String topicID = ListenField.getText();
      subscriber.listen(topicID);
    }                                            

    private void createFieldActionPerformed(java.awt.event.ActionEvent evt) {                                            
         
    }                                           

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException { 
    	String topicID = createField.getText();
    	publisher.createTopic(topicID);
    }                                            
                                            

    private void deleteFieldActionPerformed(java.awt.event.ActionEvent evt) {                                            
         
    }                                           

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException {                                             
      String topicID = deleteField.getText();
    	publisher.deleteItem(topicID);
    }                                            
                                            

    private void getTopicIDButtonActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException {                                                 
        String topicID = getTopicIDField.getText();
        String result = publisher.getTopicID(topicID);
        ausgabeTextArea.setText(result);
     }

    private void discoverButtonActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException {  
    		PubSubHandler handler = new PubSubHandler();
    		String get = discoverField.getText();
        System.out.println("TopicId: "+handler.getTopicID(get));
				System.out.println("discoItems: "+handler.discoItems(get));
				handler.getChildElXML(get);
				System.out.println("Service: "+handler.getServiceName());
				handler.discoverNodes(get);
				handler.getItem(get);
				handler.getSubscriptions(get);
				System.out.println("ItemID: "+handler.getFirstItemId(get));
				System.out.println("ItemID: " + handler.getLastItemId(get));
		}
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify
    private javax.swing.JButton ChangeUserIDButton;
    private javax.swing.JTextField ChangeUserIDField;
    private javax.swing.JButton CreateButton;
    private javax.swing.JButton ListenButton;
    private javax.swing.JTextField ListenField;
    private javax.swing.JButton SubscribeButton;
    private javax.swing.JTextField SubscribeField;
    private javax.swing.JButton UnsubscribeButton;
    private javax.swing.JTextField UnsubscribeField;
    private javax.swing.JScrollPane ausgabeScrollPane;
    private javax.swing.JTextArea ausgabeTextArea;
    private javax.swing.JTextField createField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField deleteField;
    private javax.swing.JButton discoverButton;
    private javax.swing.JTextField discoverField;
    private javax.swing.JButton getTopicIDButton;
    private javax.swing.JTextField getTopicIDField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton publishButton;
    private javax.swing.JTextField publishField;
    private javax.swing.JComboBox publishTopicBox;
    private javax.swing.JComboBox publishTypeBox;
    // End of variables declaration
    
}


